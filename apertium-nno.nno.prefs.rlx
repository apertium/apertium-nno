# -*- cg-pre-pipe: "lt-proc -N1 nno.automorf.bin|sed 's,\\^[^/]*/,^,g' | lt-proc -b nno_e_vi.autogen.bin"; cg-command: "~/src/ap/vislcg3/src/cg-proc"; cg-extra-args: "-t -g -n -z apertium-nno.nno.prefs.rlx # " -*-
# GPL-2+
#
# Generator dictionary preference rules.
#
# We expect stream variables to set or remove variables with naming
# scheme "VAR:default_override", where "override" is chosen if set,
# otherwise "default" is chosen. For any "default", there may be
# multiple possible "override"''s.

DELIMITERS = ".";

SELECT:ggj_gg (".*~ande.*"ri)    IF (0 (VAR:ggj_gg));
SELECT:ggj_gg (".*~yng[^j].*"ri) IF (0 (VAR:ggj_gg));
SELECT:ggj_gg (".*~eng[^j].*"ri) IF (0 (VAR:ggj_gg));
SELECT:ggj_gg (".*~venge.*"ri)   IF (0 (VAR:ggj_gg));
SELECT:ggj_gg (".*~ølg[^j].*"ri) IF (0 (VAR:ggj_gg));
SELECT:ggj_gg (".*~ygg[^j].*"ri) IF (0 (VAR:ggj_gg));
SELECT:ggj_gg (".*~gar.*"ri)     IF (0 (VAR:ggj_gg));

SELECT:kj_k (".*~kar.*"ri) IF (0 (VAR:kj_k)) (0 (".*kjar.*"ri)) ;
SELECT:kj_k (".*~ke.*"ri)  IF (0 (VAR:kj_k)) (0 (".*kje.*"ri));
# Paradigmet "tenke" legg inn ~ etter k-en:
SELECT:kj_k (".*k~er?"ri)  IF (0 (VAR:kj_k)) (0 (".*kjer?"ri));
SELECT:kj_k (".*k~a"ri)    IF (0 (VAR:kj_k)) (0 (".*kja"ri) );
SELECT:kj_k (".*k~ande"ri) IF (0 (VAR:kj_k)) (0 (".*kjande"ri));

SELECT:de_dokker  (".*~dokk[ea]r.*"ri) IF (0 (VAR:de_dokker));

SELECT:anten_enten  (".*~enten.*"ri) IF (0 (VAR:anten_enten));

SELECT:medan_mens  (".*~mens.*"ri) IF (0 (VAR:medan_mens));


REMOVE:fallback (".*~.*~.*~.*~.*"ri);
REMOVE:fallback (".*~.*~.*~.*"ri);
REMOVE:fallback (".*~.*~.*"ri); # prefer byggjepla~ssar over b~yggepla~ssar
REMOVE:fallback (".*~.*"ri);

# Possible input:
# ^byggeleiing<n><f><sg><def>/b~yggeleiinga/byggjeleiinga$ ^vere<vblex><pres>/er$ […]
