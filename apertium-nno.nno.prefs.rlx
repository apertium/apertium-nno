# -*- cg-pre-pipe: "lt-proc -N1 nno.automorf.bin|sed 's,\\^[^/]*/,^,g' | lt-proc -b nno_e_vi.autogen.bin"; cg-command: "cg-proc"; cg-extra-args: "-t -g -n -z apertium-nno.nno.prefs.rlx # " -*-
# GPL-2+
#
# Generator dictionary preference rules.
#
# We expect stream variables to set or remove variables with naming
# scheme "VAR:default_override", where "override" is chosen if set,
# otherwise "default" is chosen. For any "default", there may be
# multiple possible "override"''s.
#
# Lemma-specific and exceptional rules are in the beginning of this
# file, simple rules towards the end.

DELIMITERS = ".";

########################
# Unusual rules first: #
########################

# Kløyvd Infinitiv
#
# Handled in prefs.rlx instead of .dix since it's a specific set of words that partially override infa_infe:
LIST kløyvd_a = "age" "ake" "ale" "ane" "ape" "ase" "bake" "bale" "bane" "base" "bede" "belje" "bere" "betale" "beve" "bevare" "blade" "blike" "bode" "bore" "bose" "brage" "brake" "brase" "byrje" "dage" "dale" "dane" "delje" "dette" "drage" "drepe" "drynje" "drysje" "dune" "dvelje" "dynje" "dølje" "ete" "eve" "fare" "fate" "ferje" "flage" "flare" "flasse" "flase" "flate" "flòte" "flysje" "flytte" "fole" "frede" "frege" "fremje" "frode" "gage" "gale" "gane" "gape" "gilje" "gjere" "gjete" "gidde" "gjeve" "glade" "glane" "glede" "glume" "gnage" "gnike" "gove" "grave" "gremje" "grope" "grune" "grysje" "gule" "gysje" "hage" "hake" "hame" "hate" "have" "hele" "hemje" "herje" "hesje" "hete" "hevje" "hjale" "hòle" "homme" "home" "hòpe" "hylje" "hysje" "hølje" "jage" "kake" "kare" "kave" "kjase" "kjee" "klage" "klake" "klede" "kløvje" "knake" "knase" "knise" "knode" "kole" "komme" "kome" "krake" "krase" "krave" "kreke" "krevje" "krite" "krote" "kunne" "kvede" "kvetje" "kvike" "kvime" "lade" "lage" "lape" "late" "lave" "lede" "lee" "leke" "lemme" "leme" "lemje" "lepje" "lese" "léte" "lete" "love" "lute" "make" "male" "mane" "mase" "mate" "mede" "moke" "mole" "mone" "møkje" "nase" "nave" "neve" "olboge" "pare" "pele" "pese" "pose" "prate" "rage" "rake" "rane" "rape" "rase" "reke" "remje" "reve" "rode" "rydje" "rysje" "sage" "sake" "same" "sede" "seie" "sele" "selje" "semje" "setja/sette" "sitja/sitte" "skade" "skake" "skale" "skape" "skare" "skave" "skilje" "skipe" "skjage" "sjage" "skjene" "skjere" "skjønne" "skjøne" "skode" "skòle" "skòre" "skote" "skrape" "skrate" "skreve" "skulle" "skule" "skvale" "skylje" "slave" "sleve" "smake" "smale" "smørje" "snake" "snare" "snase" "sove" "spade" "spare" "spekje" "spele" "spore" "sprake" "sprale" "spørje" "spøte" "stage" "stake" "stave" "stede" "stege" "stele" "stote" "streka " "strete" "streve" "stynje" "styrje" "svade" "svage" "svale" "svare" "svemje" "sverje" "svipe" "symje" "take" "tale" "tane" "tape" "tase" "teie" "tele" "telje" "temje" "tenje" "tevje" "timje" "tole" "tore" "tose" "trede" "trege" "trote" "tvike" "tvoge" "tysje" "umake" "une" "uvete" "uvite" "vade" "vake" "vare" "vase" "vege" "velje" "venje" "vere" "verje" "vete" "veve" "vevje" "vilje" "vime" "vite" "vrake" "ylje" "yrje" "ølje" "åtvare" ;

# For v:kløyvd_inf, we only select e-inf if it's *not* part of the kløyvd_a set:
SELECT (v:infa_infe) IF (0 (VAR:kløyvd_inf)) (NEGATE 0 kløyvd_a) ;

SELECT (v:infa_infe) IF (0 (VAR:infa_infe)) ;
REMOVE (v:infa_infe) ;


# Open Lemma Slots
#
# Preferences with open slots for lemmas start with an underscore.
#
# If you set AP_SETVAR="brukte_bruka.vb-e2a" you should get 
# e-inflection (-er–-te/-de/-dde) → -a-inflection (-ar–-a)
# for all the forms that have that tag, but if you instead set 
# AP_SETVAR="brukte_bruka.vb-e2a=bruke:rope:sile", then you only get a-inflection
# for those specific lemmas.
#
# AP_SETVAR="håpa_håpte.vb-e2a" does the same thing in the opposite direction,
# a-inflection → e-inflection.
#
# AP_SETVAR="er_ar.vb-e2a" handles optional mixed inflection:
# bruke – brukar – brukte – brukt.
#
# NB. Rules match lemmas on "<wordforms>" – since this is input to
# generator, wordforms/lemmas are backwards.
#
# Dirty one-liner to find all lemmas that can use a certain var-tag:
# $ grep -Ff <(awk '/<pardef /{p=$0}/<\/pardef/{p=""}/:_er_ar.vb-e2a/&&p{print p}' apertium-nno.nno.dix |sort -u|sed 's, c=.*,,'|grep -v ':_er_ar.vb-e2a' |sed 's,def,,' ) apertium-nno.nno.dix |grep -o 'lm="[^"]*"'|sed 's,^lm=,,'
#
# The #.* entry is to allow multiwords, e.g. AP_SETVAR="er_ar.vb-e2a=lene"
# should also affect "lene seg".

LIST brukte_bruka_vbs = "<.*(bruke|ane|bake|betale|breke|dreie|dynge|eine|glane|hale|jule|klare|koke|kose|leie|like|mane|lure|rope|sile|skape|skjønne|slipe|sløre|spele|stråle|svare|tale|tvile)>"r ;
LIST brukte_bruka_adjs = "<.*(bruk|bak|betal|klar|kok|lur|rop|sil|slip|spar|spel|svar|tal|tvil)t>"r ; # doesn't include final -t in $1
LIST brukte_bruka_adjs2 = "<.*(drei|lei)dd>"r ; # doesn't include final -dd in $1
LIST brukte_bruka_adjs3 = "<.*(dyng)d>"r ;  # doesn't include final -d in $1
SELECT:compounds (v:brukte_bruka.vb-e2a) + brukte_bruka_vbs  IF (0 (VSTR:VAR:brukte_bruka.vb-e2a=/\\b$1\\b/r)) ;
SELECT:adjs      (v:brukte_bruka.vb-e2a) + brukte_bruka_adjs IF (0 (VSTR:VAR:brukte_bruka.vb-e2a=/\\b$1e\\b/r)) ; # add final -e
SELECT:adjs2     (v:brukte_bruka.vb-e2a) + brukte_bruka_adjs2 IF (0 (VSTR:VAR:brukte_bruka.vb-e2a=/\\b$1e\\b/r)) ; # add final -e
SELECT:adjs3     (v:brukte_bruka.vb-e2a) + brukte_bruka_adjs3 IF (0 (VSTR:VAR:brukte_bruka.vb-e2a=/\\b$1e\\b/r)) ; # add final -e
SELECT:lm_filter (v:brukte_bruka.vb-e2a "<(.+)>"r)     IF (0 (VSTR:VAR:brukte_bruka.vb-e2a=/\\b$1\\b/r)) ;
SELECT:mw_filter (v:brukte_bruka.vb-e2a "<(.+)#.*>"r)  IF (0 (VSTR:VAR:brukte_bruka.vb-e2a=/\\b$1\\b/r)) ;
SELECT:no_filter (v:brukte_bruka.vb-e2a)               IF (0      (VAR:brukte_bruka.vb-e2a=*)) ;
REMOVE:unset     (v:brukte_bruka.vb-e2a) ;

LIST håpa_håpte_vbs = "<.*(ape|beite|brøyte|drøfte|ense|feile|feste|flytte|gifte|helse|håpe|lade|leike|leite|love|løfte|meie|miste|peike|prise|rose|skifte|skjerpe|sprelle|streve|sveise|trene)>"r ;
LIST håpa_håpte_adjs = "<.*(ap|beit|brøyt|drøft|fest|flytt|gift|lad|lov|peik|skift|sveis|tren)a>"r ; # doesn't include final -a in $1
SELECT:compounds (v:håpa_håpte.vb-e2a) + håpa_håpte_vbs  IF (0 (VSTR:VAR:håpa_håpte.vb-e2a=/\\b$1\\b/r)) ;
SELECT:adjs      (v:håpa_håpte.vb-e2a) + håpa_håpte_adjs IF (0 (VSTR:VAR:håpa_håpte.vb-e2a=/\\b$1e\\b/r)) ; # add final -e
SELECT:lm_filter (v:håpa_håpte.vb-e2a "<(.+)>"r)     IF (0 (VSTR:VAR:håpa_håpte.vb-e2a=/\\b$1\\b/r)) ;
SELECT:mw_filter (v:håpa_håpte.vb-e2a "<(.+)#.*>"r)  IF (0 (VSTR:VAR:håpa_håpte.vb-e2a=/\\b$1\\b/r)) ;
SELECT:no_filter (v:håpa_håpte.vb-e2a)               IF (0      (VAR:håpa_håpte.vb-e2a=*)) ;
REMOVE:unset     (v:håpa_håpte.vb-e2a) ;


# For any other variant, pick v:foo if VAR:foo is set, otherwise remove v:foo

LIST any_variant = /v:\(.*\)/r ;
SELECT:isset* any_variant IF (0 (VSTR:VAR:$1)) ;
REMOVE:unset* any_variant ;

# Possible input:
# ^byggeleiing<n><f><sg><def>/b<v:ggj_gg>yggeleiinga/byggjeleiinga$ ^vere<vblex><pres>/er$ […]

# For cg-format output, asf input:
# (setq cg-pre-pipe "cat" cg-command "cg-proc" cg-extra-args "-t -z " cg-post-pipe "cg-conv --out-cg --in-apertium")
